{"ast":null,"code":"var _jsxFileName = \"/Users/waqaskhan/Sites/test-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from './components/Header/Header';\nimport Card from './components/UI/Card';\nimport TransactionsList from './components/Transactions/TransactionsList';\nimport AddTransaction from './components/Transactions/AddTransaction';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [transactions, setTransactions] = useState([{\n    title: 'Salary',\n    amount: '2400',\n    type: 'income',\n    id: Math.floor(Math.random() * 1000000)\n  }, {\n    title: 'Rent',\n    amount: '1000',\n    type: 'expense',\n    id: Math.floor(Math.random() * 1000000)\n  }, {\n    title: 'Utilities',\n    amount: '400',\n    type: 'expense',\n    id: Math.floor(Math.random() * 1000000)\n  }]);\n  const [totalIncome, setTotalIncome] = useState(0);\n  const [totalExpense, setTotalExpense] = useState(0);\n  let newIncome = 0;\n  let newExpense = 0;\n\n  for (const transaction of transactions) {\n    if (transaction.type === \"income\") {\n      newIncome += +transaction.amount;\n    } else {\n      newExpense += +transaction.amount;\n    }\n  }\n\n  setTotalIncome(newIncome);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        transactions: transactions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TransactionsList, {\n        transactions: transactions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(AddTransaction, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Pdpgetjh2y/KJ2SRHubvmxQXy0c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","Card","TransactionsList","AddTransaction","useState","App","transactions","setTransactions","title","amount","type","id","Math","floor","random","totalIncome","setTotalIncome","totalExpense","setTotalExpense","newIncome","newExpense","transaction"],"sources":["/Users/waqaskhan/Sites/test-react/src/App.js"],"sourcesContent":["import Header from './components/Header/Header'\n\nimport Card from './components/UI/Card'\nimport TransactionsList from './components/Transactions/TransactionsList'\nimport AddTransaction from './components/Transactions/AddTransaction'\n\nimport {useState} from 'react'\n\nfunction App() {\n  const [transactions, setTransactions] = useState([\n    {\n      title: 'Salary',\n      amount: '2400',\n      type: 'income',\n      id: Math.floor(Math.random() * 1000000)\n    },\n    {\n      title: 'Rent',\n      amount: '1000',\n      type: 'expense',\n      id: Math.floor(Math.random() * 1000000)\n    },\n    {\n      title: 'Utilities',\n      amount: '400',\n      type: 'expense',\n      id: Math.floor(Math.random() * 1000000)\n    }\n  ])\n\n  const [totalIncome, setTotalIncome] = useState(0);\n  const [totalExpense, setTotalExpense] = useState(0);\n    \n  let newIncome = 0\n  let newExpense = 0\n\n  for (const transaction of transactions) {\n      if(transaction.type === \"income\") {\n          newIncome += +transaction.amount\n      } else {\n          newExpense += +transaction.amount\n      }\n  }\n\n  setTotalIncome(newIncome)\n\n  return (\n    <section>\n    <Card>\n      <Header transactions={transactions}/>\n      <TransactionsList transactions={transactions}/>\n      <AddTransaction />\n    </Card>\n    </section>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,4BAAnB;AAEA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,gBAAP,MAA6B,4CAA7B;AACA,OAAOC,cAAP,MAA2B,0CAA3B;AAEA,SAAQC,QAAR,QAAuB,OAAvB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCH,QAAQ,CAAC,CAC/C;IACEI,KAAK,EAAE,QADT;IAEEC,MAAM,EAAE,MAFV;IAGEC,IAAI,EAAE,QAHR;IAIEC,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,OAA3B;EAJN,CAD+C,EAO/C;IACEN,KAAK,EAAE,MADT;IAEEC,MAAM,EAAE,MAFV;IAGEC,IAAI,EAAE,SAHR;IAIEC,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,OAA3B;EAJN,CAP+C,EAa/C;IACEN,KAAK,EAAE,WADT;IAEEC,MAAM,EAAE,KAFV;IAGEC,IAAI,EAAE,SAHR;IAIEC,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,OAA3B;EAJN,CAb+C,CAAD,CAAhD;EAqBA,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,CAAD,CAA9C;EACA,MAAM,CAACa,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,CAAD,CAAhD;EAEA,IAAIe,SAAS,GAAG,CAAhB;EACA,IAAIC,UAAU,GAAG,CAAjB;;EAEA,KAAK,MAAMC,WAAX,IAA0Bf,YAA1B,EAAwC;IACpC,IAAGe,WAAW,CAACX,IAAZ,KAAqB,QAAxB,EAAkC;MAC9BS,SAAS,IAAI,CAACE,WAAW,CAACZ,MAA1B;IACH,CAFD,MAEO;MACHW,UAAU,IAAI,CAACC,WAAW,CAACZ,MAA3B;IACH;EACJ;;EAEDO,cAAc,CAACG,SAAD,CAAd;EAEA,oBACE;IAAA,uBACA,QAAC,IAAD;MAAA,wBACE,QAAC,MAAD;QAAQ,YAAY,EAAEb;MAAtB;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,gBAAD;QAAkB,YAAY,EAAEA;MAAhC;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE,QAAC,cAAD;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA;EADA;IAAA;IAAA;IAAA;EAAA,QADF;AASD;;GA/CQD,G;;KAAAA,G;AAiDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}