{"ast":null,"code":"var _jsxFileName = \"/Users/waqaskhan/Sites/test-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from './components/Header/Header';\nimport Card from './components/UI/Card';\nimport TransactionsList from './components/Transactions/TransactionsList';\nimport AddTransaction from './components/Transactions/AddTransaction';\nimport { useState, useEffect, useRef, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [transactions, setTransactions] = useState([]);\n  const [totalIncome, setTotalIncome] = useState(0);\n  const [totalExpense, setTotalExpense] = useState(0);\n  useEffect(() => {\n    var storedTransactions = JSON.parse(localStorage.getItem(transactions));\n    console.log(storedTransactions);\n    console.log('local storage set');\n  }, []);\n\n  const updateTransactions = transaction => {\n    setTransactions(prevTransactions => {\n      return [transaction, ...transactions];\n    });\n  };\n\n  const deleteTransaction = id => {\n    setTransactions(prevTransactions => {\n      return prevTransactions.filter(transaction => id != transaction.id);\n    });\n    console.log(transactions);\n  };\n\n  const calculateTotal = useCallback(data => {\n    let incomeTotal = 0;\n    let expenseTotal = 0;\n    data.forEach(item => {\n      if (item.type === \"income\") {\n        incomeTotal += +item.amount;\n      } else {\n        expenseTotal += +item.amount;\n      }\n    });\n    setTotalIncome(incomeTotal);\n    setTotalExpense(expenseTotal);\n  }, []);\n  const firstRenderRef = useRed(true);\n  useEffect(() => {\n    calculateTotal(transactions);\n    localStorage.setItem('transactions', JSON.stringify(transactions));\n    console.log('initialized');\n  }, [calculateTotal, transactions]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        transactions: transactions,\n        income: totalIncome,\n        expense: totalExpense\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TransactionsList, {\n        transactions: transactions,\n        onTransactionRemove: deleteTransaction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddTransaction, {\n        onTransactionAdd: updateTransactions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"wppQ8B0N98CnOEH7/l2DgIFdCyg=\", true);\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","Card","TransactionsList","AddTransaction","useState","useEffect","useRef","useCallback","App","transactions","setTransactions","totalIncome","setTotalIncome","totalExpense","setTotalExpense","storedTransactions","JSON","parse","localStorage","getItem","console","log","updateTransactions","transaction","prevTransactions","deleteTransaction","id","filter","calculateTotal","data","incomeTotal","expenseTotal","forEach","item","type","amount","firstRenderRef","useRed","setItem","stringify"],"sources":["/Users/waqaskhan/Sites/test-react/src/App.js"],"sourcesContent":["import Header from './components/Header/Header'\n\nimport Card from './components/UI/Card'\nimport TransactionsList from './components/Transactions/TransactionsList'\nimport AddTransaction from './components/Transactions/AddTransaction'\n\nimport {useState, useEffect, useRef, useCallback} from 'react'\n\nfunction App() {\n  const [transactions, setTransactions] = useState([])\n\n  const [totalIncome, setTotalIncome] = useState(0);\n  const [totalExpense, setTotalExpense] = useState(0);\n\n  useEffect(()=>{\n    var storedTransactions = JSON.parse(localStorage.getItem(transactions))\n    console.log(storedTransactions)\n    console.log('local storage set')\n  },[])\n    \n  const updateTransactions = (transaction) => {\n    setTransactions(prevTransactions => {\n      return [transaction, ...transactions]\n    })\n  }\n\n  const deleteTransaction = (id) => {\n    setTransactions((prevTransactions) => {\n      return prevTransactions.filter(transaction => id != transaction.id)\n    })\n    console.log(transactions)\n  }\n  \n  const calculateTotal = useCallback((data) => {\n    let incomeTotal = 0 \n    let expenseTotal = 0 \n    \n    data.forEach(item => {\n      if(item.type === \"income\") {\n        incomeTotal += +item.amount\n      } else {\n        expenseTotal += +item.amount\n      }\n    })\n    \n    setTotalIncome(incomeTotal)\n    setTotalExpense(expenseTotal)\n  }, [])\n  \n  const firstRenderRef = useRed(true)\n  \n  useEffect(()=>{\n\n    calculateTotal(transactions)\n    localStorage.setItem('transactions', JSON.stringify(transactions))\n    console.log('initialized')\n  },[calculateTotal, transactions])\n\n  return (\n    <section>\n      <Card>\n        <Header transactions={transactions} income={totalIncome} expense={totalExpense} />\n        <TransactionsList transactions={transactions} onTransactionRemove={deleteTransaction}/>\n        <AddTransaction onTransactionAdd={updateTransactions} />\n      </Card>\n    </section>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,4BAAnB;AAEA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,gBAAP,MAA6B,4CAA7B;AACA,OAAOC,cAAP,MAA2B,0CAA3B;AAEA,SAAQC,QAAR,EAAkBC,SAAlB,EAA6BC,MAA7B,EAAqCC,WAArC,QAAuD,OAAvD;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;EAEA,MAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,CAAD,CAA9C;EACA,MAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,CAAD,CAAhD;EAEAC,SAAS,CAAC,MAAI;IACZ,IAAIU,kBAAkB,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBV,YAArB,CAAX,CAAzB;IACAW,OAAO,CAACC,GAAR,CAAYN,kBAAZ;IACAK,OAAO,CAACC,GAAR,CAAY,mBAAZ;EACD,CAJQ,EAIP,EAJO,CAAT;;EAMA,MAAMC,kBAAkB,GAAIC,WAAD,IAAiB;IAC1Cb,eAAe,CAACc,gBAAgB,IAAI;MAClC,OAAO,CAACD,WAAD,EAAc,GAAGd,YAAjB,CAAP;IACD,CAFc,CAAf;EAGD,CAJD;;EAMA,MAAMgB,iBAAiB,GAAIC,EAAD,IAAQ;IAChChB,eAAe,CAAEc,gBAAD,IAAsB;MACpC,OAAOA,gBAAgB,CAACG,MAAjB,CAAwBJ,WAAW,IAAIG,EAAE,IAAIH,WAAW,CAACG,EAAzD,CAAP;IACD,CAFc,CAAf;IAGAN,OAAO,CAACC,GAAR,CAAYZ,YAAZ;EACD,CALD;;EAOA,MAAMmB,cAAc,GAAGrB,WAAW,CAAEsB,IAAD,IAAU;IAC3C,IAAIC,WAAW,GAAG,CAAlB;IACA,IAAIC,YAAY,GAAG,CAAnB;IAEAF,IAAI,CAACG,OAAL,CAAaC,IAAI,IAAI;MACnB,IAAGA,IAAI,CAACC,IAAL,KAAc,QAAjB,EAA2B;QACzBJ,WAAW,IAAI,CAACG,IAAI,CAACE,MAArB;MACD,CAFD,MAEO;QACLJ,YAAY,IAAI,CAACE,IAAI,CAACE,MAAtB;MACD;IACF,CAND;IAQAvB,cAAc,CAACkB,WAAD,CAAd;IACAhB,eAAe,CAACiB,YAAD,CAAf;EACD,CAdiC,EAc/B,EAd+B,CAAlC;EAgBA,MAAMK,cAAc,GAAGC,MAAM,CAAC,IAAD,CAA7B;EAEAhC,SAAS,CAAC,MAAI;IAEZuB,cAAc,CAACnB,YAAD,CAAd;IACAS,YAAY,CAACoB,OAAb,CAAqB,cAArB,EAAqCtB,IAAI,CAACuB,SAAL,CAAe9B,YAAf,CAArC;IACAW,OAAO,CAACC,GAAR,CAAY,aAAZ;EACD,CALQ,EAKP,CAACO,cAAD,EAAiBnB,YAAjB,CALO,CAAT;EAOA,oBACE;IAAA,uBACE,QAAC,IAAD;MAAA,wBACE,QAAC,MAAD;QAAQ,YAAY,EAAEA,YAAtB;QAAoC,MAAM,EAAEE,WAA5C;QAAyD,OAAO,EAAEE;MAAlE;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,gBAAD;QAAkB,YAAY,EAAEJ,YAAhC;QAA8C,mBAAmB,EAAEgB;MAAnE;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE,QAAC,cAAD;QAAgB,gBAAgB,EAAEH;MAAlC;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AASD;;GA3DQd,G;;KAAAA,G;AA6DT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}