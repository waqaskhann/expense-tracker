[{"/Users/waqaskhan/Sites/test-react/src/index.js":"1","/Users/waqaskhan/Sites/test-react/src/App.js":"2","/Users/waqaskhan/Sites/test-react/src/components/Header/Header.js":"3","/Users/waqaskhan/Sites/test-react/src/components/UI/Card.js":"4","/Users/waqaskhan/Sites/test-react/src/components/Transactions/TransactionsList.js":"5","/Users/waqaskhan/Sites/test-react/src/components/Transactions/AddTransaction.js":"6"},{"size":424,"mtime":1657839195483,"results":"7","hashOfConfig":"8"},{"size":1829,"mtime":1657879146764,"results":"9","hashOfConfig":"8"},{"size":1268,"mtime":1657801102850,"results":"10","hashOfConfig":"8"},{"size":188,"mtime":1657558019626,"results":"11","hashOfConfig":"8"},{"size":1620,"mtime":1657839837297,"results":"12","hashOfConfig":"8"},{"size":2490,"mtime":1657799119585,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jij6ag",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/waqaskhan/Sites/test-react/src/index.js",[],[],"/Users/waqaskhan/Sites/test-react/src/App.js",["33"],[],"import Header from './components/Header/Header'\n\nimport Card from './components/UI/Card'\nimport TransactionsList from './components/Transactions/TransactionsList'\nimport AddTransaction from './components/Transactions/AddTransaction'\n\nimport {useState, useEffect, useCallback} from 'react'\n\nfunction App() {\n  const [transactions, setTransactions] = useState([])\n\n  const [totalIncome, setTotalIncome] = useState(0);\n  const [totalExpense, setTotalExpense] = useState(0);\n\n  useEffect(()=>{\n    var storedTransactions = JSON.parse(localStorage.getItem('transactions'));\n    if(storedTransactions) {\n      setTransactions(storedTransactions)\n    }\n  },[])\n    \n  const updateTransactions = (transaction) => {\n    setTransactions(prevTransactions => {\n      return [transaction, ...transactions]\n    })\n  }\n\n  const deleteTransaction = (id) => {\n    setTransactions((prevTransactions) => {\n      return prevTransactions.filter(transaction => id != transaction.id)\n    })\n  }\n  \n  const calculateTotal = useCallback((data) => {\n    let incomeTotal = 0 \n    let expenseTotal = 0 \n    \n    data.forEach(item => {\n      if(item.type === \"income\") {\n        incomeTotal += +item.amount\n      } else {\n        expenseTotal += +item.amount\n      }\n    })\n    \n    setTotalIncome(incomeTotal)\n    setTotalExpense(expenseTotal)\n  }, [])\n  \n  useEffect(()=>{\n    calculateTotal(transactions)\n    localStorage.setItem('transactions', JSON.stringify(transactions))    \n    console.log(2)\n  },[calculateTotal, transactions])\n\n  return (\n    <section>\n      <Card>\n        <Header income={totalIncome} expense={totalExpense} />\n        <TransactionsList transactions={transactions} onTransactionRemove={deleteTransaction}/>\n        <AddTransaction onTransactionAdd={updateTransactions} />\n      </Card>\n    </section>\n  );\n}\n\nexport default App;\n","/Users/waqaskhan/Sites/test-react/src/components/Header/Header.js",[],[],"/Users/waqaskhan/Sites/test-react/src/components/UI/Card.js",[],[],"/Users/waqaskhan/Sites/test-react/src/components/Transactions/TransactionsList.js",[],[],"/Users/waqaskhan/Sites/test-react/src/components/Transactions/AddTransaction.js",["34"],[],{"ruleId":"35","severity":1,"message":"36","line":30,"column":56,"nodeType":"37","messageId":"38","endLine":30,"endColumn":58},{"ruleId":"39","severity":1,"message":"40","line":38,"column":13,"nodeType":"41","endLine":38,"endColumn":139},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement"]